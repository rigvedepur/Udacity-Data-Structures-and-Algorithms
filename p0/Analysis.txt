Time Complexity Analysis for Tasks


Task 0

The code in Task 0 will run only one time regardless of the size of input. Therefore,
Run time complexity is O(0n)--> O(1)

---------------------------------------------------------------------------------------


Task 1

For each task (texts and calls), the program needs to iterate through all the numbers one at a time.

Run time complexity is O(n+n)--> O(2n)--> O(n)

---------------------------------------------------------------------------------------

Task 2

For each call record, there are multiple computations such as
* check if both 'from' and 'to' numbers are already present
* If number is already present, then add keep adding call time
* keep track of max time and update if call time for current record exceeds max time

All these computations occur only once per call record.

Therefore,
Run time complexity = O(n)

---------------------------------------------------------------------------------------

Task 3

There are 2 for loops in this program (Part A & Part B)

Part A:

In first for loop, following computations are performed:
* check if 'from' number is (080)
* if receiving number is a landline or a mobile number (has an empty space after first 4 digits)
* further check in the receiving numbers if they are from Bangalore (080)
* Sort all receiving numbers and print them one at a time. Time complexity for sort algorithm is nlog(n)


All these steps are computed once for an input.
Run time complexity for part A = O(n + nlogn)

Part B:

In part B, for every call record, a counter is used to track both calling and receiving numbers that match the Bangalore code (080)
Run time complexity for this step will be
O(n)

Therefore total run time complexity is still
O(n + nlogn + n) --> O(2n +nlogn)

---------------------------------------------------------------------------------------

Task 4

There are 3 main loops in this Task

* In first loop, the program iterates over all texts. Run time complexity is O(n)
* In third loop, the program iterates over all calls. Run time complexity is O(n)
* The 4th loop is a sort loop. The run time complexity is O(nlogn)

Adding all these,

Total Run time complexity = O(n + n + n + nlogn) --> O(3n +nlogn)
